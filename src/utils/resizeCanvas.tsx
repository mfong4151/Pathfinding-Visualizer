import { pos } from "../types/positions";


//This might need ot be refactored to handle canvases

export const calculateResize = (matrixDim: pos, rightDiv:HTMLDivElement, matrixDiv: any):[number, number] =>{
        
    if(!rightDiv && !matrixDiv) return [-1, -1];

    const BREAK_POINT_MAX: number = 40; //break point of where we don't refacotr
    const BOTTOM_BREAK_POINT: number = 120; //Basically used to size the matrix from the bottom: It's preferable to do this in css, but too much of the matricies are generated by React        
    const rightDivHeight: number = rightDiv.offsetHeight;  
    const rightDivWidth: number = rightDiv.offsetWidth;
    const tileHeightWidth: number = matrixDiv.firstChild.firstChild.offsetWidth!
    console.log(matrixDiv.offsetTop)
    const maxNumRows = Math.floor((rightDivHeight -matrixDiv.offsetTop + BOTTOM_BREAK_POINT)/tileHeightWidth)
    const maxNumCols = Math.floor((rightDivWidth - BREAK_POINT_MAX)/tileHeightWidth)
    return [Math.min(matrixDim.y, maxNumRows),  Math.min(matrixDim.x,maxNumCols)];
  }

