import { pos } from "../types/positions";




export const calculateResize = (matrixDim: pos, matrixDiv: any, matHolderDiv: any):[number, number] =>{
        
    if( !matrixDiv) return [-1, -1];
    
    
    const PADDING:number = 1; //Number of cells we want to use as "padding"
    const matDivHeight: number = matHolderDiv.offsetHeight;   //Basically used to size the matrix from the bottom: It's preferable to do this in css, but too much of the matricies are generated by React        
    const matDivWidth: number = matHolderDiv.offsetWidth;
    const tileHeightWidth: number = matrixDiv.firstChild.firstChild.offsetWidth!;
    const maxNumRows = Math.floor((matDivHeight)/tileHeightWidth) - PADDING;
    const maxNumCols = Math.floor((matDivWidth)/tileHeightWidth) - PADDING;
    return [Math.min(matrixDim.y, maxNumRows),  Math.min(matrixDim.x,maxNumCols)];
  }

